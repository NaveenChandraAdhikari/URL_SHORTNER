spring.application.name=url-shortner-sb

server.port=9001


spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

spring.jpa.properties.hibernate.dialect=${DATABASE_DIALECT}
#spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update


#
#
#logging.level.org.springframework.security=DEBUG
#logging.level.org.url.shortener=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.org.springframework=DEBUG
#logging.level.org.springframework.web.servlet=TRACE

jwt.secret=${JWT_SECRET}
jwt.expiration=172800000



frontend.url=${FRONTEND_URL}


#GITHUB Oauth2 configuration
spring.security.oauth2.client.registration.github.client-id=
spring.security.oauth2.client.registration.github.client-secret=
spring.security.oauth2.client.registration.github.scope=
#what sought of info retrieve from the user tell the scope




#GOOGLE Oauth2 configuration
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
#we configured the scoped in the google dashboard  itslef


#externalize for production with env file